name: CD

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  generate-changelog:
    name: Generate changelog and update release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: config/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      
      # This step reads a file from repo and use it for body of the release
      # This works on any self-hosted runner OS
      - name: Read CHANGES.md and use it as a body of new release
        id: read_changes
        shell: bash
        run: |
          r=${{ secrets.(cat CHANGES.md)                    # <--- Read CHANGES.md (Provide correct path as per your repo)
          r="${r//'%'/'%25'}"                               # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"                             # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"                             # Multiline escape sequences for '\r'
          echo "::set-output name=CHANGES_BODY::$r"         # <--- Set environment variable

      - name: Upload the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body: "${{ steps.read_changes.outputs.CHANGES_BODY }}"
  deploy:
    env:
      PUPPETEER_DOWNLOAD_PATH: ~/.npm/chromium
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.0
      uses: actions/setup-node@v2
      with:
        node-version: 14.0
        cache: 'npm'

    - name: Install puppeteer requirements
      run: sudo apt-get install -yq --no-install-recommends libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 libnss3
        
    - run: npm ci
    - run: npm run build
    
    - name: "Set up SSH agent"
      uses: webfactory/ssh-agent@v0.5.3
      with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
          
    - name: "Add GitHub to the SSH known hosts file"
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        
    - name: Upload to server
      run: rsync -avr --rsh "ssh" --delete-after --delete-excluded build/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.WWW_DIR }}

    - name: Ensure correct permissions
      run: | 
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "find ${{ secrets.WWW_DIR }} -type d -exec chmod 755 {} \;"
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "find ${{ secrets.WWW_DIR }} -type f -exec chmod 644 {} \;"

